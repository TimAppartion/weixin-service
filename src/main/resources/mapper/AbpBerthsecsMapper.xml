<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.jiuzhou.user.mapper.AbpBerthsecsMapper">
    <select id="nearSite" resultType="com.example.jiuzhou.user.view.AbpBerthsecsView">
       select * from (SELECT top 100 s.Id as id,s.RegionName,s.BerthsecName,s.Lat as longitude,s.Lng as latitude ,s.ParkId,s.count,s.orderCount,s.ParkName,s.ParkType, dbo.fnGetDistance(#{query.lng},#{query.lat},s.Lng,s.Lat) as distance FROM (SELECT ar.RegionName,ad.*,ae.ParkName,ae.ParkType from  (SELECT ab.Id,ab.BerthsecName,ab.Lat,ab.Lng,ab.ParkId,ab.count, ISNULL(ac.orderCount,0) orderCount  from (SELECT a.Id,a.BerthsecName,a.Lat,a.Lng,a.ParkId, COUNT(b.BerthNumber) count  from  AbpBerthsecs a left join AbpBerths b on a.Id = b.BerthsecId where a.TenantId = 1 and  a.IsDeleted = 0  GROUP BY a.BerthsecName, a.ParkId,a.Id,a.Id,a.Lat,a.Lng) ab  left join  (SELECT  a.Id,a.BerthsecName,a.Lat,a.Lng,b.ParkId, COUNT(b.BerthNumber) orderCount  from  AbpBerthsecs a left join AbpBerths b on a.Id = b.BerthsecId  where b.BerthStatus = 1 and a.TenantId = 1 and  a.IsDeleted = 0 GROUP BY a.BerthsecName,b.ParkId,a.Id,a.Lat,a.Lng) ac  on ab.Id = ac.Id) ad right join AbpParks ae  on ad.ParkId = ae.Id left join AbpRegions ar on ae.RegionId = ar.Id
        where
        ad.BerthsecName like   concat('%', #{query.parkingName}, '%')
        <if test="query.parkType!=null">
            and ae.ParkType = #{query.parkType}
        </if>
        ) s ORDER BY distance ) as temp
    </select>
</mapper>
